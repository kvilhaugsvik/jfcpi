At the moment there are no proper installation support. Running it from this directory should work.

========================================================================================================================
Building
========================================================================================================================
What you'll need
 * A Java 7 (Java 6 hasn't been tested for a while) JDK. A JRE is not enough.
 * JUnit 4.10 (other versions not tested) if you plan to run the tests
 * GNU Make 3.81 (other versions are probably OK)
 * The Freeciv source code (SVN revision 22865 of trunk and SVN revision 22857 of the 2.4 branch is known to work)
 * Scala 2.9 or 2.10 (if you plan to regenerate source code from the Freeciv source code)

Where you can find it
 * Most GNU/Linux distributions will have the OpenJDK Java implementation in their package repositories. Users of
   Windows and OS X can find Java at http://java.oracle.com. Remember that you need a JDK and not just a JRE. No browser
   plug in is required. Unofficial installers of OpenJDK for Windows and OS X (without the browser plug in) exist.
 * Most GNU/Linux distributions will have JUnit in their package repositories. Windows and OS X users can find it at
   http://JUnit.org
 * GNU Make is needed to build Freeciv as well. GNU/Linux users will find it in the package repository of their
   distribution. Apple distributes it as a part of Command Line Tools for OS X. Windows users can get it from
   http://cygwin.com
 * The trunk version of Freeciv can be found at svn://svn.gna.org/svn/freeciv/trunk and downloaded using your favorite
   version control system. To download it using Bazaar make sure that bzr-svn is installed and run
     bzr branch svn://svn.gna.org/svn/freeciv/trunk
   The Freeciv web page has instructions for downloading the trunk version using Git or SVN at
   http://freeciv.wikia.com/wiki/Freeciv_source_code_repository
 * Scala is in the package repositories of some GNU/Linux distributions. It can also be found at http://scala-lang.org

Building
The Makefile in this folder don't have a ./configure script. It therefore may need to be told where it can find its
dependencies. If you are running Debian Wheezy and installed all the dependencies from the official Debian repository
and have placed this folder in Freeciv trunk the defaults should be OK. If not you must override the default values from
the command line. You override them by setting them before the command. The information that is needed is:
 * JAVA - the java application launcher
 * JAVAC - the java compiler
 * JAR - the jar utility
 * SCALA - the scala application launcher
 * SCALAC - the scala compiler
 * SCALALIB - the scala library
 * JUNIT - the JUnit library
To compile using a JUnit located in ~/lib to run the tests and a jar from ~/bin/jar use the command
  JUNIT=~/lib/junit.jar JAR=~/bin/jar make all

Freeciv has its own documentation on how to build it and what you need. You won't have to install it to test recording.
It is worth having a look at. If all of Freeciv's build dependencies are there entering its folder and running
./autogen.sh && make
should work.

When this is done see README for instructions on how to record and play back a Freeciv game.

Building without JUnit
Tests have been included to make sure that everything work as expected. The test code is in the folder Tests. If you
don't plan to change the code and trust that your system won't break an assumption the code makes you don't have to run
them. In that case you can use the make target "compileProxyRecorder" in stead of the target "all" to exclude them.
  make compileProxyRecorder
should work. Remember to set dependency locations for the other dependencies first.

Building without Scala, the Freeciv source code or JUnit
Since the Freeciv protocol change between Freeciv versions some of the source code to support it is generated from the
Freeciv source code. The code in GeneratePackets, JavaGenerator and DependencyHandler is only used for this. It uses
Scala code to extract (what hopefully is) the needed data from Freeciv's source code. If you don't plan to regenerate
the Freeciv version dependent source code or run the tests you won't need Scala. To get the generated source code
download a compiled version. Then use the command
  make clean
to remove the compiled versions of the code you now are able to rebuild. Then run
  make compileProxyRecorder
to compile what you can rebuild. No tests are run.

========================================================================================================================
Distributing
========================================================================================================================
The GPLv2 section 3 requires that the source code it self or a written offer to give it to anyone accompanies the
distribution of "object code or executable form". The source code is defined as "the preferred form of the work for
making modifications to it." The Freeciv C source can therefore be said to be the source code of the generated Java code
unless the Java code has been manually modified after it was generated. Remembering to include it or an offer for it can
be hard.

To solve this GeneratePackets can copy the Freeciv sources used to generate the Java code and put them next to the
generated Java code if the option --gpl-source is set to true. The Freeciv source code generated from will then end up
next to the generated code. It is possible to turn of to avoid confusion in cases when Freeciv is there anyway. To turn
it off when using the bundled Makefile set NOT_DISTRIBUTED_WITH_FREECIV to false when running make.
