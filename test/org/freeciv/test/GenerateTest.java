package org.freeciv.test;

import org.freeciv.packetgen.Packet;
import org.freeciv.packetgen.Field;
import org.freeciv.packetgen.Hardcoded;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.LinkedList;

public class GenerateTest {
    private static final LinkedList<String> writtenPackets = new LinkedList<String>();

    public static void main(String[] args) throws IOException {
        (new File("autogenerated/org/freeciv/packet/")).mkdirs();

        writeFieldType("UINT32", 0);
        writeFieldType("STRING", 1);
        writePacket(new Packet("SERVER_JOIN_REQ",
                4,
                new Field("username", "STRING", "String"),
                new Field("capability", "STRING", "String"),
                new Field("version_label", "STRING", "String"),
                new Field("major_version", "UINT32", "Long"),
                new Field("minor_version", "UINT32", "Long"),
                new Field("patch_version", "UINT32", "Long")));
        writePacket(new Packet("CONN_PONG", 89));

        FileWriter packetList = new FileWriter("autogenerated/" + "org/freeciv/packet/" + "packets.txt");
        for (String packet: writtenPackets) {
            packetList.write(packet + "\n");
        }
        packetList.close();
    }

    private static void writePacket(Packet packet) throws IOException {
        writeJavaFile(packet.getName(), packet.toString());
        writtenPackets.add((packet.getNumber() + "\t" + "org/freeciv/packet/" + packet.getName()).replace('/', '.'));
    }

    private static void writeFieldType(String fieldType, int ioType) throws IOException {
        String content = Hardcoded.out[ioType].toString(fieldType);
        writeJavaFile(fieldType, content);
    }

    private static void writeJavaFile(String javaclass, String content) throws IOException {
        File classFile = new File("autogenerated/org/freeciv/packet/" + javaclass + ".java");
        classFile.createNewFile();
        FileWriter toClass = new FileWriter(classFile);
        toClass.write(content);
        toClass.close();
    }
}
